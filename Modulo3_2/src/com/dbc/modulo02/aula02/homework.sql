
--pais
CREATE TABLE VEM_SER.PAIS(
    ID_PAIS INT PRIMARY KEY NOT NULL,
    NOME VARCHAR2(50) UNIQUE NOT NULL
);

DROP TABLE VEM_SER.PAIS;
DROP SEQUENCE VEM_SER.SEQ_PAIS;

CREATE SEQUENCE VEM_SER.SEQ_PAIS
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

--insert
INSERT INTO VEM_SER.PAIS (ID_PAIS, NOME)
VALUES(VEM_SER.SEQ_PAIS.nextval, 'BRASIL' );

INSERT INTO VEM_SER.PAIS (ID_PAIS, NOME)
VALUES(SEQ_PAIS.nextval, 'ARGENTINA' );


--estado
CREATE TABLE VEM_SER.ESTADO(
    ID_ESTADO INT PRIMARY KEY NOT NULL,
    ID_PAIS INT NOT NULL,
    NOME VARCHAR2(50) UNIQUE NOT NULL,
    CONSTRAINT FK_ID_PAIS FOREIGN KEY ( ID_PAIS ) REFERENCES VEM_SER.PAIS( ID_PAIS )
    );
   
   CREATE SEQUENCE VEM_SER.SEQ_ESTADO
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

--insert to brasil
INSERT INTO VEM_SER.ESTADO (ID_ESTADO, ID_PAIS, NOME)
VALUES(SEQ_ESTADO.nextval, 1, 'DF' );

INSERT INTO VEM_SER.ESTADO (ID_ESTADO, ID_PAIS, NOME)
VALUES(SEQ_ESTADO.nextval, 1, 'BA' );

--insert to argentina
INSERT INTO VEM_SER.ESTADO (ID_ESTADO, ID_PAIS, NOME)
VALUES(SEQ_ESTADO.nextval, 2, 'AR1' );

INSERT INTO VEM_SER.ESTADO (ID_ESTADO, ID_PAIS, NOME)
VALUES(SEQ_ESTADO.nextval, 2, 'AR2' );
   
   
   ALTER TABLE VEM_SER.ESTADO
ADD CONSTRAINT FK_ID_PAIS FOREIGN KEY ( ID_PAIS ) REFERENCES VEM_SER.PAIS( ID_PAIS );

DROP TABLE VEM_SER.ESTADO;
DROP SEQUENCE VEM_SER.SEQ_ESTADO;

--cidade
CREATE TABLE VEM_SER.CIDADE(
ID_CIDADE int NOT NULL,
ID_ESTADO int NOT NULL,
PRIMARY KEY (ID_CIDADE, ID_ESTADO),
NOME VARCHAR2(50) NOT NULL,
CONSTRAINT FK_ID_ESTADO FOREIGN KEY ( ID_ESTADO ) REFERENCES VEM_SER.ESTADO( ID_ESTADO )
);

CREATE SEQUENCE VEM_SER.SEQ_CIDADE
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

--insert to DF
INSERT INTO VEM_SER.CIDADE (ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_CIDADE.nextval, 1, 'Ceilandia' );

--insert to BA
INSERT INTO VEM_SER.CIDADE (ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_CIDADE.nextval, 2, 'Salvador' );

--insert to AR1
INSERT INTO VEM_SER.CIDADE (ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_CIDADE.nextval, 3, 'CIDADE ARGENTINA1' );

--insert to AR2 
INSERT INTO VEM_SER.CIDADE (ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_CIDADE.nextval, 4, 'cidade Argentina2' );

ALTER TABLE VEM_SER.CIDADE
ADD CONSTRAINT FK_ID_ESTADO FOREIGN KEY ( ID_ESTADO ) REFERENCES VEM_SER.ESTADO( ID_ESTADO );

DROP TABLE VEM_SER.CIDADE;
DROP SEQUENCE VEM_SER.SEQ_CIDADE;


--bairro
CREATE TABLE VEM_SER.BAIRRO(
ID_BAIRRO int NOT NULL,
ID_CIDADE int NOT NULL,
ID_ESTADO int NOT NULL,
NOME VARCHAR2(50) NOT NULL,
PRIMARY KEY (ID_BAIRRO, ID_CIDADE),
CONSTRAINT FK_ID_ESTADOCIDADE FOREIGN KEY (ID_CIDADE, ID_ESTADO ) REFERENCES VEM_SER.CIDADE( ID_CIDADE, ID_ESTADO)
);

CREATE SEQUENCE VEM_SER.SEQ_BAIRRO
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

--insert to Ceilandia 
INSERT INTO VEM_SER.BAIRRO (ID_BAIRRO, ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_BAIRRO.nextval, 1, 1, 'Ceilandia NORTE' );

--insert to salvador
INSERT INTO VEM_SER.BAIRRO (ID_BAIRRO, ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_BAIRRO.nextval, 2, 2, 'Rio Vermelho' );

--insert to CIDADE ARGENTINA1 
INSERT INTO VEM_SER.BAIRRO (ID_BAIRRO, ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_BAIRRO.nextval, 3, 3, 'bairro ar1' );

--insert to cidade Argentina2 
INSERT INTO VEM_SER.BAIRRO (ID_BAIRRO, ID_CIDADE, ID_ESTADO, NOME)
VALUES(SEQ_BAIRRO.nextval, 4, 4, 'bairro ar2' );

DROP TABLE VEM_SER.BAIRRO;
DROP SEQUENCE VEM_SER.SEQ_BAIRRO;


/*
ALTER TABLE VEM_SER.BAIRRO
ADD CONSTRAINT FKd_ID_ESTADO FOREIGN KEY ( ID_ESTADO ) REFERENCES VEM_SER.ESTADO( ID_ESTADO );*/



--endereço
CREATE TABLE VEM_SER.ENDERECO(
ID_ENDERECO int PRIMARY KEY NOT NULL,
ID_BAIRRO int NOT NULL,
ID_CIDADE int NOT NULL,
LOGRADOURO VARCHAR2(255) NOT NULL,
NUMERO int NOT NULL,
COMPLEMENTO VARCHAR2(100),
CEP CHAR(9),
CONSTRAINT FK_ID_BAIRRO FOREIGN KEY ( ID_BAIRRO, ID_CIDADE  ) REFERENCES VEM_SER.BAIRRO ( ID_BAIRRO, ID_CIDADE )
);

CREATE SEQUENCE VEM_SER.SEQ_ENDERECO
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

--insert endereco ceilandia norte
INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 2, 1,'qnm 29 conjunto K',26 ,'casa fundos', '321456540' );

INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 2, 1,'qnm 29 conjunto p',45 ,'ap', '321452541' );

--insert endereco rio vermelho
INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 3, 2,'rua ush cj c rua 10',264 ,'condominio', '123456549' );

INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 3, 2,'aus cj t rua 5',265 ,'rua', '987456549' );

--insert endereco bairro ar1
INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 4, 3,'sei endereco argentino',260 ,'rua', '325456549' );

INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 4, 3,'nao sei endereco argentino',223 ,'csa', '265565493' );

--insert endereco bairro ar2
INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 5, 4,'rua nao sei endereco argentino',026 ,'fase', '121456549' );

INSERT INTO VEM_SER.ENDERECO  (ID_ENDERECO, ID_BAIRRO, ID_CIDADE, LOGRADOURO, NUMERO,COMPLEMENTO,CEP)
VALUES(SEQ_ENDERECO.nextval, 5, 4,'nao sei endereco argentino',321 ,'fundos', '157456549' );


DROP TABLE VEM_SER.ENDERECO;
DROP SEQUENCE VEM_SER.SEQ_ENDERECO;

ALTER TABLE VEM_SER.ENDERECO
CONSTRAINT FK_ID_BAIRRO FOREIGN KEY ( ID_BAIRRO  ) REFERENCES VEM_SER.BAIRRO ( ID_BAIRRO);

ALTER TABLE VEM_SER.ENDERECO
ADD CONSTRAINT FK_ID_CIDADE FOREIGN KEY ( ID_CIDADE ) REFERENCES VEM_SER.CIDADE( ID_CIDADE);

SELECT * FROM VEM_SER.PAIS;
SELECT * FROM VEM_SER.ESTADO;
SELECT * FROM VEM_SER.CIDADE;
SELECT * FROM VEM_SER.BAIRRO;
SELECT * FROM VEM_SER.ENDERECO;





--HOMEWOERK1 aula2


--Selecionar todos os países ordenados por nome decrescente!

SELECT * FROM VEM_SER.PAIS
ORDER BY NOME DESC;

--Selecionar lougradouro e cep dos endereços. Porém, somente os logradouros que comecem com a letra 'a' (maiusculo ou minusculo)!

SELECT LOGRADOURO, CEP FROM VEM_SER.ENDERECO
WHERE LOWER(LOGRADOURO) LIKE 'a%';

--Selecionar todos os endereços que tenham cep com final ‘0’!

SELECT * FROM VEM_SER.ENDERECO
WHERE CEP LIKE '%0';

-- Selecionar todos os endereços que tenham números entre 1 e 100!

SELECT * FROM VEM_SER.ENDERECO
WHERE NUMERO BETWEEN 1 AND 100;

--Selecionar todos os endereços que comecem por “RUA” e ordenar pelo cep de forma decrescente !

SELECT * FROM VEM_SER.ENDERECO
WHERE LOGRADOURO LIKE 'rua%'
ORDER BY CEP DESC;

--Selecionar a quantidade de endereços cadastrados na tabela

SELECT COUNT(*) AS "contator de enderecos" FROM VEM_SER.ENDERECO;

-- Selecionar a quantidade de endereços cadastrados agrupados pelo id da cidade!

SELECT ID_CIDADE,Count(*) FROM VEM_SER.ENDERECO
GROUP BY ID_CIDADE;




--exercicio aula03


UPDATE VEM_SER.ENDERECO
SET LOGRADOURO = LOGRADOURO, COMPLEMENTO = COMPLEMENTO
WHERE ID_ENDERECO  = 1 OR ID_ENDERECO  = 2;


--======================

UPDATE VEM_SER.ENDERECO
SET NUMERO = 99999
WHERE ID_ENDERECO = 4;



---================

DELETE  FROM VEM_SER.ENDERECO
WHERE 

--======================

DELETE FROM VEM_SER.ENDERECO
WHERE NUMERO = 99999;

--=====================

DELETE FROM VEM_SER.ENDERECO










